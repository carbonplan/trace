name: CI

on:
  push:
    branches: "*"
  pull_request:
    branches: "*"

jobs:
  test:
    name: ${{ matrix.python-version }}-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup Python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - uses: actions/cache@v2.1.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          python -m pip install -r dev-requirements.txt
          python -m pip install --no-deps -e .
          python -m pip list
      - name: Running Tests
        run: |
          python -m pytest --verbose

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            carbonplan/trace-python-notebook
          tag-sha: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: envs/python-notebook
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-python@v2.2.1
      - uses: pre-commit/action@v2.0.0
